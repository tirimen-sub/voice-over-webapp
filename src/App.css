html, body, #root {
  margin: 0;
  padding: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;      /* ページスクロール禁止 */
}
.App {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background: transparent;
  z-index: 0;
}
.bubble-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;      /* はみ出しバブルも隠す */
  background: transparent;   /* お好みの背景色 */
  isolation: isolate;
}



/* モーダルのオーバーレイ */
.modal-overlay {
  position: fixed;
  top: 0; left: 0;
  width:100vw; height:100vh;
  background: rgba(0,0,0,0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index:1000;
}
/* モーダルボックス */
.modal-content {
  background: #fff;
  padding: 1.5rem;
  border-radius: 8px;
  width: 90%;
  max-width: 400px;
  position: relative;
}
/* 閉じるボタン */
.modal-close {
  position: absolute;
  top: .5rem;
  right: .5rem;
  border: none;
  background: transparent;
  font-size: 1.2rem;
  cursor: pointer;
}
.error {
  color: red;
  margin-bottom: 1rem;
}
.question-list {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 1rem;
  margin-top: 1rem;
}
.question-wrapper {
  cursor: pointer;
}
.throw-button {
  position: fixed;
  bottom: 1rem;
  right: 1rem;
  padding: .8rem 1.2rem;
  background: #4a90e2;
  color: #fff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
.title-screen {
  text-align: center;
  margin-top: 20vh;
}
.start-button {
  margin-top: 1rem;
  padding: .8rem 1.5rem;
  font-size: 1.1rem;
  cursor: pointer;
}


.bubble {
  position: absolute;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background: rgba(255,255,255,0.9);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 4px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
  box-shadow: 0 2px 8px rgba(0,0,0,0.2);
  z-index: 2;          
  mix-blend-mode: normal; /* さらに差分合成モードを解除 */

  /* 漂うアニメーション */
  animation-name: drift;
  animation-timing-function: ease-in-out;
  animation-iteration-count: infinite;
}

@keyframes drift {
  0%   { transform: translate(-50%, -50%) translate(0, 0); opacity: 0.8; }
  50%  { transform: translate(-50%, -50%) translate(var(--drift-x), var(--drift-y)) rotate(5deg); opacity: 1; }
  100% { transform: translate(-50%, -50%) translate(0, 0); opacity: 0.8; }
}

/* バブル内テキスト */
.bubble-content {
  text-align: center;
  word-break: break-word;
  color: #333;
  padding: 4px;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.bg-video {
  position: fixed;   /* or absolute */
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  object-fit: cover; /* 中心クロップで画面全体を覆う */
  z-index: -2;       /* 背景として最背面に */
  pointer-events: none; /* 上のUI操作を妨げないように*/
}

.overlay-video {
  position: fixed;
  top: 0; left: 0;
  width: 100vw; height: 100vh;
  object-fit: cover;
  opacity: 0.8;           /* 半透明 */
  mix-blend-mode: multiply;/* 乗算合成 */
  z-index: -1;            /* ベース動画より前、UIより後ろ */
  pointer-events: none;    /* ユーザー操作を邪魔しない */
}

/* App.css などに追加してください */

.title-screen,
.main-screen {
  position: absolute;    /* 重ねておく */
  top: 0; left: 0;
  width: 100%;
  height: 100%;
  transition: opacity 0.5s ease;
  isolation: isolate;
  /* pointer-events: none; を入れた画面は押せなくなるので要調整 */
}

/* 初期状態 */
.title-screen { opacity: 1; z-index: 2; }
.main-screen  { opacity: 0; z-index: 1; }

/* スタート直後にタイトル画面をフェードアウト */
.title-screen.fade-out { opacity: 0; }

/* タイトルが消えた後にメイン画面をフェードイン */
.main-screen.fade-in  { opacity: 1; }